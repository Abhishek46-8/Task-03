Generate an API key with given link below https://openweathermap.org/guide Print the current weather data in console- By lat lang 
Do the below programs in anonymous function and IIFE

1) Print odd numbers in an array 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
const oddNumbers = [1,2,34,54,55,34,32,11,19,17,54,66,13].filter((number) => number%2!==0);
console.log(oddNumbers);
  


  //end-here
});
-----------------------------------------------------------------------------------------------------
2)Convert all the strings to title caps in a string array 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
const names = ['abhishek', 'ishaq', 'hari', 'john'];

const uppercased = names.map(name => name.toUpperCase());

console.log(uppercased);


  //end-here
});
----------------------------------------------------------------------------------------------------------
3)Sum of all numbers in an array 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 var array = [1, 2, 3, 4, 5, 10];
    
    // Getting sum of numbers
    var sum = array.reduce(function(a, b){
        return a + b;
    }, 0);
    
    console.log(sum); 

  //end-here
});
--------------------------------------------------------------------------------------------------------------
4)Return all the prime numbers in an array 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
var numArray = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]

numArray = numArray.filter((number) => {
  for (var i = 2; i <= Math.sqrt(number); i++) {
    if (number % i === 0) return false;
  }
  return true;
});

console.log(numArray);

  //end-here
});
-----------------------------------------------------------------------------------------------------------------------
5)Return all the palindromes in an array 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
const arr = ['carecar', 1344, 12321, 'did', 'canac'];
const isPalindrome = el => {
   const str = String(el);
   let i = 0;
   let j = str.length - 1;
   while(i < j) {
      if(str[i] === str[j]) {
         i++;
         j--;
      }
      else {
         return false;
      }
   }
   return true;
};
const findPalindrome = arr => {
   return arr.filter(el => isPalindrome(el));
};
console.log(findPalindrome(arr));

  //end-here
});
-------------------------------------------------------------------------------------------------
6)Return median of two sorted arrays of same size 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
 function getMedian(ar1, ar2, n)
{
   
    
   
	var i = 0; /* Current index of i/p array ar1[] */
	var j = 0; /* Current index of i/p array ar2[] */
	var count;
	var m1 = -1, m2 = -1;
	
	

	
	for (count = 0; count <= n; count++)
	{
	
		if (i == n)
		{
			m1 = m2;
			m2 = ar2[0];
			break;
		}

	
		else if (j == n)
		{
			m1 = m2;
			m2 = ar1[0];
			break;
		}
		/* equals sign because if two
			arrays have some common elements */
		if (ar1[i] <= ar2[j])
		{
			m1 = m2; /* Store the prev median */
			m2 = ar1[i];
			i++;
		}
		else
		{
			m1 = m2; /* Store the prev median */
			m2 = ar2[j];
			j++;
		}
	}

	return (m1 + m2)/2;
}
var ar1 = [4, 12, 19, 26, 38];
var ar2 = [8, 13, 17, 30, 55];
var n1 = ar1.length;
var n2 = ar2.length;

if (n1 == n2)
    console.log("Median is "+ getMedian(ar1, ar2, n1));
else
   console.log("Doesn't work for arrays of unequal size");


  //end-here
});
---------------------------------------------------------------------------------------------------------
7)Remove duplicates from an array 
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic 
let chars = ['A', 'B', 'A','D',  'C', 'B'];

let uniqueChars = chars.filter((c, index) => {
    return chars.indexOf(c) === index;
});

console.log(uniqueChars);

  //end-here
});
------------------------------------------------------------------------------------------------------------
8)Rotate an array by k times and return the rotated array
CODE-:
// Getting input via STDIN
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  //start-here
  //Your code goes here … replace the below line with your code logic
  let nums=[8, 7, 9, 4, 3, 2];
  let k=2;
  const rotateArray2 = function(nums, k) {
    
  // reverse helper function
  function reverse(arr, start, end) {
    while (start < end) {
      [arr[start], arr[end]] = [arr[end], arr[start]];
      start++;
      end--;
    }
  }
  

  k %= nums.length;

  reverse(nums, 0, (nums.length - 1));
  reverse(nums, 0, (k - 1));
  reverse(nums, k, (nums.length - 1));

  return nums;
}

  //end-here
});